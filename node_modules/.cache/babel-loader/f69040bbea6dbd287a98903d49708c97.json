{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\Components\\\\Expenses\\\\ExpensesChart.js\";\nimport Chart from '../Chart/Chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = props => {\n  const chartDataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); //starting at 0 =>jan=>0\n\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","ExpensesChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["D:/Download/01-starting-setup/01-starting-setup/src/Components/Expenses/ExpensesChart.js"],"sourcesContent":["import Chart from '../Chart/Chart.js'\r\nconst ExpensesChart=(props)=>{\r\n    const chartDataPoints = [\r\n      { label: \"Jan\", value: 0 },\r\n      { label: \"Feb\", value: 0 },\r\n      { label: \"Mar\", value: 0 },\r\n      { label: \"Apr\", value: 0 },\r\n      { label: \"May\", value: 0 },\r\n      { label: \"Jun\", value: 0 },\r\n      { label: \"Jul\", value: 0 },\r\n      { label: \"Aug\", value: 0 },\r\n      { label: \"Sep\", value: 0 },\r\n      { label: \"Oct\", value: 0 },\r\n      { label: \"Nov\", value: 0 },\r\n      { label: \"Dec\", value: 0 },\r\n    ];\r\n    for(const expense of props.expenses){\r\n    const expenseMonth =expense.date.getMonth();//starting at 0 =>jan=>0\r\n    chartDataPoints[expenseMonth].value +=expense.amount;\r\n    }  \r\n    return <Chart dataPoints={chartDataPoints}/>\r\n}\r\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,mBAAlB;;;AACA,MAAMC,aAAa,GAAEC,KAAD,IAAS;EACzB,MAAMC,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CADsB,EAEtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAFsB,EAGtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAHsB,EAItB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAJsB,EAKtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CALsB,EAMtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CANsB,EAOtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAPsB,EAQtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CARsB,EAStB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CATsB,EAUtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAVsB,EAWtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAXsB,EAYtB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAZsB,CAAxB;;EAcA,KAAI,MAAMC,OAAV,IAAqBJ,KAAK,CAACK,QAA3B,EAAoC;IACpC,MAAMC,YAAY,GAAEF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAApB,CADoC,CACQ;;IAC5CP,eAAe,CAACK,YAAD,CAAf,CAA8BH,KAA9B,IAAsCC,OAAO,CAACK,MAA9C;EACC;;EACD,oBAAO,QAAC,KAAD;IAAO,UAAU,EAAER;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CApBD;;KAAMF,a;AAqBN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}